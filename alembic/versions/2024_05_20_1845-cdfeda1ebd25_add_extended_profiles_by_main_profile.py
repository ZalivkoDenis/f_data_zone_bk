"""Add extended profiles by main Profile

Revision ID: cdfeda1ebd25
Revises: e0a6df75fbe3
Create Date: 2024-05-20 18:45:36.855544

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cdfeda1ebd25"
down_revision: Union[str, None] = "e0a6df75fbe3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "b24profiles",
        sa.Column("profile_id", sa.Integer(), nullable=False),
        sa.Column("user_email", sa.String(length=128), nullable=False),
        sa.Column("password", sa.LargeBinary(length=512), nullable=True),
        sa.Column("password_hash", sa.LargeBinary(length=128), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profiles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("profile_id"),
        sa.UniqueConstraint("user_email"),
    )
    op.create_table(
        "email_svc_profiles",
        sa.Column("profile_id", sa.Integer(), nullable=False),
        sa.Column("user_email", sa.String(length=128), nullable=False),
        sa.Column("password", sa.LargeBinary(length=512), nullable=True),
        sa.Column("password_hash", sa.LargeBinary(length=128), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profiles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_email"),
    )
    op.add_column(
        "profiles",
        sa.Column("middle_name", sa.String(length=40), nullable=True),
    )
    op.drop_column("profiles", "bio")
    op.add_column("users", sa.Column("active", sa.Boolean(), nullable=False))
    op.add_column(
        "users", sa.Column("user_email", sa.String(length=128), nullable=False)
    )
    op.add_column(
        "users",
        sa.Column("password", sa.LargeBinary(length=512), nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("password_hash", sa.LargeBinary(length=128), nullable=True),
    )
    op.drop_constraint("users_username_key", "users", type_="unique")
    op.create_unique_constraint(None, "users", ["user_email"])
    op.drop_column("users", "username")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "username",
            sa.VARCHAR(length=32),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "users", type_="unique")
    op.create_unique_constraint("users_username_key", "users", ["username"])
    op.drop_column("users", "password_hash")
    op.drop_column("users", "password")
    op.drop_column("users", "user_email")
    op.drop_column("users", "active")
    op.add_column(
        "profiles",
        sa.Column("bio", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_column("profiles", "middle_name")
    op.drop_table("email_svc_profiles")
    op.drop_table("b24profiles")
    # ### end Alembic commands ###
